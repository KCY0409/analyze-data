# 패키지 설치하고 xlsx 데이터 불러오기
install.packages('openxlsx')
library(openxlsx)
movies = read.xlsx('data/movies.xlsx')
View(movies)
head(movies)
tail(movies)
names(movies)
##2 $를 활용해서 변수를 선택하여
##  매출액, 관객수, 상영횟수의 최댓값 계산하기
max(movies$매출액,movies$관객수,movies$상영횟수)
##2 $를 활용해서 변수를 선택하여
##  매출액, 관객수, 상영횟수의 최댓값 계산하기
max(movies$매출액)
max(movies$관객수)
max(movies$상영횟수)
View(movies)
##3 which.max( )로 매출액 최대, 관객수 최대 영화 확인하기
which.max(movies$매출액)
movies[60, ]
movies[]
movies[1, ]
source('C:/Users/Kim Chang Yong/Desktop/R/혼자 해보는 데이터 분석/rsciprt/1_movies.R', encoding = 'UTF-8', echo=TRUE)
##3 which.max( )로 매출액 최대, 관객수 최대 영화 확인하기
which.max(movies$매출액)
##3 which.max( )로 매출액 최대, 관객수 최대 영화 확인하기
which.max(movies$매출액)
movies[64, ]
movies[64, 2]
movies[64, ]
which,max(movies$관객수)
which.max(movies$관객수)
##3 which.max( )로 매출액 최대, 관객수 최대 영화 확인하기
which.max(movies$매출액)
which.max(movies$관객수)
movies[64, ]
##4 관객수의 히스토그램과 상자그림 그리기
library(ggplot2)
hist(movies)
hist(movies,
x=movies$영화명, y = movies$관객수)
hist(movies$관객수)
hist(x = movies$영화명, movies$관객수)
hist(x = movies$영화명, y=movies$관객수)
hist(movies,
x = movies$영화명, y = movies$관객수)
movies2 <- c(movies$영화명, movies$관객수)
remove(movies2)
movies2 <- table(movies$영화명, movies$관객수)
remove(movies2)
movies2 <- vector(movies$영화명, movies$관객수)
hist(movies$관객수)
ggplot2(data = movies,
aes(x = movies$영화명, y = movies$관객수))
ggplot2(data = movies
aes(x = movies$영화명, y = movies$관객수))
ggplot2(data = movies,
aes(x = 영화명, y = 관객수))
ggplot(data = movies,
aes(x = 영화명, y = 관객수))
boxplot(movies$관객수)
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
ncol(movies)
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
movies2 <- movies$관객수/movies$상영횟수
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
movies2 <- movies$관객수/movies$상영횟수
movies2
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
remove(movies2)
cbind(movies,movies$관객수/movies$상영횟수)
movies2 <- cbind(movies,movies$관객수/movies$상영횟수)
View(movies2)
which.max(movies2$`movies$관객수/movies$상영횟수`)
movies2[21, ]
movies2 <- cbind(movies,movies$관객수/movies$상영횟수,name = "상영횟수 대비 관객수")
View(movies2)
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
remove(movies2)
movies2 <- cbind(movies,"상영횟수 대비 관객수" = movies$관객수/movies$상영횟수)
View(movies)
View(movies2)
which.max(movies2$`상영횟수 대비 관객수`)
movies2[21, ]
names(movies)
# 데이터 불러오기
highway = read.csv('data/highway_1812.csv', fileEncoding='UTF-8')
highway
# 집계일자를 날짜 형식으로 변환
highway$집계일자 = strptime(highway$집계일자, format='%Y%m%d')
# 요일 변수 추가하기
highway$요일 = weekdays(highway$집계일자)
##1 변수이름, 관측치 샘플 확인하기
names(highway)
head(highway)
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
movies <- cbind(movies,"상영횟수 대비 관객수" = movies$관객수/movies$상영횟수)
which.max(movies$`상영횟수 대비 관객수`)
movies2[21, ]
##5 관객수를 상영횟수로 나눠 상영횟수당 관객수가 가장 많은 영화 찾기
remove(movies2)
head(highway)
tail(highway)
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway$요일 = "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway$요일 == "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway$요일)
subset(highway$요일)
subset("토요일")
View(highway)
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway$요일, "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, highway$요일, "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, cut = "토요일")
View(highway_sat)
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, cut == "토요일")
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, cut == '토요일')
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, highway$요일 == '토요일')
View(highway_sat)
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
subset(highway, highway$영업소명 == c('통영','북통영'))
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
subset(highway, highway$요일  == c('토요일', '일요일') %in% 영업소명 == c('통영','북통영'))
## (예제) %in%의 활용
subset(highway, 영업소명 %in% c('서울(특)', '동서울'))
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
subset(highway, highway$요일  == c('토요일', '일요일') & 영업소명 == c('통영','북통영'))
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
subset(highway, highway$요일 %in% c('토요일', '일요일') & 영업소명 %in% c('통영','북통영'))
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
subset(highway, 요일 %in% c('토요일', '일요일') &
영업소명 %in% c('통영','북통영'))
##3 영업소명 기준 '통영' 혹은 '북통영' 이면서
##  요일 기준 '토요일', '일요일'인 데이터만 모아서
## ty_weekend 로 저장하기
ty_weekend <- subset(highway,
요일 %in% c('토요일', '일요일') &
영업소명 %in% c('통영','북통영'))
View(ty_weekend)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, by=highway$요일, FUN = sum)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, by == highway$요일, FUN = sum)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, list(daStandard = highway$요일),  sum)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, by = list(daStandard = highway$요일),  sum)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, list(daStandard = highway$요일),  sum)
View(highway)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, list(daStandard = highway$요일), mean)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway, list(daStandard = highway$요일), sum(highway$통행량))
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway$통행량, list(daStandard = highway$요일), sum)
##5 3에서 만든 ty_weekend로 집계시간별 통행량 합계를 계산하기
aggregate(ty_weekend, list(tmStandard = ty_weekend$집계시간), sum)
##5 3에서 만든 ty_weekend로 집계시간별 통행량 합계를 계산하기
aggregate(ty_weekend$통행량, list(tmStandard = ty_weekend$집계시간), sum)
##5 3에서 만든 ty_weekend로 집계시간별 통행량 합계를 계산하기
aggregate(ty_weekend$통행량, list(ty_weekend$집계시간), sum)
##4 aggregate( )로 요일별 통행량 합계 계산하기
aggregate(highway$통행량, list(daStandard = highway$요일), sum)
##5 3에서 만든 ty_weekend로 집계시간별 통행량 합계를 계산하기
aggregate(ty_weekend$통행량, list(tmStandard = ty_weekend$집계시간), sum)
##2 subset( )으로 토요일 데이터만 모아서
##  highway_sat 로 저장하기
highway_sat <- subset(highway, 요일 == '토요일')
highway_sat <- subset(highway, 요일 == "토요일")
highway_sat <- subset(highway, 요일 == '토요일')
ty_weekend <- subset(highway,
영업소명 %in% c('통영','북통영') &
요일 %in% c('토요일', '일요일'))
View(ty_weekend)
aggregate(통행량~요일, data = highway, sum)
aggregate(통행량 ~ 집계시간, data = ty_weekend , sum)
agg <- aggregate(통행량 ~ 집계시간, data = ty_weekend , sum)
View(ty_weekend)
View(agg)
##1 데이터 불러와서 insurance로 저장하기
insurance <- read.csv("data/insurance.csv", fileEncoding = 'UTF-8')
View(insurance)
insurance
##2 summary( )함수로 데이터 요약하고
##  수치형 변수는 히스토그램, 범주형 변수는 표 만들기
summary(insurance)
hist(c(insurance$age, insurance$bmi, insurance$children, insurance$charges))
hist(insurance$bmi)
hist(비만지수 = insurance$bmi)
hist(비만지수 == insurance$bmi)
table(insurance$sex)
table(insurance$region)
table(insurance$smoker)
table(insurance$sex)
plot(insurance$bmi,insurance$charges)
plot(x = insurance$bmi,y = insurance$charges)
plot(x = insurance$bmi,y = insurance$charges, pch = 16)
cor(insurance$bmi, insurance$charges)
